fifo INPUTS
clk,rst,w,din(7 down to 0)
outputs
dout(7 down to0),red

signal wptr,rptr:std_logic_vector(3 down to 0);
type fifome is array(15 down to 0 ) of std_logic_vector(3 down to 0);
signal mem:fifome;
begin
process(clk,rst,w,din)
begin
if rst='1' then
wptr<="0000";rptr<="0000";red<='0';
elsif(clk'event and clk='1') then
if(w='1')then
if(wptr<"1111")then
mem(conv_integer(wptr))<=din;
wptr=wptr+1;
else red<='1;
end if;
else
if(rptr<wptr)then
dout<=mem(conv_integer(rptr));
rptr<=rptr+1;
elsered<='1';
end if;
end if;
end if;
end process

testbench

rst<='1'; wait for 100ns
rst<='0';
w<='1';
din<="01001001"; wait for 100n
din<="01001001"; wait for 100n
din<="01001001"; wait for 100ns
w<='0';
din<="01001001"; wait for 100n
din<="01001001"; wait for 100ns
din<="01001001"; wait for 100n

MOD INPUTS
generic (N:natural:=8);
port(clk,rst,enable
outputs
y(N-1 down to 0));


signal counter:unsigned(N-1 down to0);
process(clk,rst)
begin
if rst='1' then
counter<=(others=>'0');
elsif rising_edge(clk) then
if enable='1' then
counter<=counter+1;
end if;
end if;
end process;
y<=std_process_vector(counter);

testbench
rstt<='1';  enable<='0'; wait for 100ns
rst<='0';  enable<='1'; wait for 100ns




shift inputs
clk,rst,mode(1 down to 0) sin, pin(7down to 0)
outputs
pout(7 down to0),sout


signal shift:std_logic_vector(7 down to 0);

begin
process(clk,rst,mode,sin,pin)
begin
if rst='1' then
sin<='0';pout<="00000000";shift<="00000000";
elsif(clk'event and clk='1') then
case mode is
when"00"=>shift(7)<=sin;
sout<=shift(0);
shift(6 down to 0)<=shift(7 down to 1);
when"01"=>shift(7)<=sin;
pout<=shift(7 down to0);
when"10"=>shift(7)<=sin;
sout<=shift(0);
when others=>shift(7 down to 0)<=pin;
pout<=shift(7 down to 0);
end case
end if 

test bench

rstt<='1'; wait for 100ns
rst<='0';
mode<="00";
sin<='1'; wait for 100ns

mode<="01";
sin<='1'; wait for 100ns

mode<="10";
pin<="10110111"; wait for 100ns

mode<="11";
pin<="10111111"; wait for 100ns




Alu Inputs
a b(3down to 0),sel
output
y

process(a,b,sel )
begin
case sel  is
when "000"=>y<=a+b
when "001=>y<=a-b
when "010"=>y<=a and b
when "011"=>y<=a or b
when "100"=>y<=a xor b
when "101"=>y<=not a
when "110"=>y<=a nor b
when "111"=>y<=a xnor b
when others=>null
end case
end process

testbench

a <= "1001";
b <= "0100";
sel<="0000"; wait for 100ns;
sel <="001"; wait for 100ns;
sel <="010"; wait for 100ns;
sel <="011"; wait for 100ns;
sel <="100"; wait for 100ns;
sel <="101"; wait for 100ns;
sel <="110"; wait for 100ns;
sel <="000" wait for 100ns;
wait
end process;
end;



exp1
reverse string

var num =prompt("enter string")

document.write(num)

//function reversest(){

  var s=num.split("") 

  var r=s.reverse()

  var v=r.join("")

  document.write(v)

//}

//function rep(){

var a =prompt("enter string")

var b =prompt("enter string")

let result=num.replace(a,b)

 document.write(result)

//}

//function pali(){

    const len=num.length

    for(var i=1;i<=len;i++){

        if(num==v){

            document.write("palindrome")

        }

        else{

           document.write("not palindrome")

        }

   }

//}

//reversest()

//rep()





compare string

var a =prompt("enter string")

var b =prompt("enter string")

let result=a.localeCompare(b)

 

        if(result==0){

            document.write("matching")

        }

        else if(result<0)

        {

           document.write("lesser")

        }

        else if(result>0)

        {

            document.write("greater")

        }

 

 

 

 


  countdown timer

 

<!DOCTYPE html>

<html lang="en">

<head>

    <meta charset="UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Document</title>

</head>

<body>

 

    <p id=days></p>

    <p id="hours"></p>

    <p id="mins"></p>

    <p id="secs"></p>

    <h2 id="end"></p>

    <script>

   

    var countDownDate = new Date("Nov 19, 2023 23:28:52").getTime();

   

    var myfunc = setInterval(function() {

    var now = new Date().getTime();

    var timeleft = countDownDate-now;

  

    var days = Math.floor(timeleft / (1000 * 60 * 60 * 24));

    var hours = Math.floor((timeleft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));

    var minutes = Math.floor((timeleft % (1000 * 60 * 60)) / (1000 * 60));

    var seconds = Math.floor((timeleft % (1000 * 60)) / 1000);

   

    document.getElementById("days").innerHTML = days + "d"

    document.getElementById("hours").innerHTML = hours + "h"

    document.getElementById("mins").innerHTML = minutes + "m"

    document.getElementById("secs").innerHTML = seconds +"s"

  

    if (timeleft < 0) {

    clearInterval(myfunc);

    document.getElementById("days").innerHTML = ""

    document.getElementById("hours").innerHTML =""

    document.getElementById("mins").innerHTML = ""

    document.getElementById("secs").innerHTML = ""

    document.getElementById("end").innerHTML = "TIME UP!!"

    }

    }, 1000);

    </script>

 

</body>

</html>





array

&lt;!DOCTYPE html&gt;
&lt;head&gt;
&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.min.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;script&gt;
// JavaScript code to illustrate splice() function
var arr = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];
document.write(&quot;Original Array: &quot; + arr + &quot;&lt;br&gt;&quot;);
function delete1() {
// Removing the specified element from the array
var element= prompt(&quot;Enter the array element to be removed!&quot;);
var flag=0;
for(var i=0;i&lt;=arr.length;i++){
if(arr[i]==element){

var spliced = arr.splice(i, 1);
document.write(&quot;Removed element: &quot; + spliced + &quot;&lt;br&gt;&quot;);
document.write(&quot;Remaining elements: &quot; + arr);
flag=1;
break;
}
}
if(flag==0){
document.write(&quot;Element Not Found&quot;);
}
}
function search(){
// Searching specified element from the array
var element= prompt(&quot;Enter the array element to be Searched!&quot;);
var flag=0;
for(var i=0;i&lt;=arr.length;i++){
if(arr[i]==element){
document.write(&quot;Element found at position &quot; + (i+1) +&quot;&lt;br&gt;&quot;);
flag=1;
break;
}
}
if(flag==0){
document.write(&quot;Element Not Found!&quot;);
}
}
function arrayEmpty(){
arr.splice(0,arr.length);
if(arr.length==0){
document.write(&quot;Array is Empty&quot;+&quot;&lt;br&gt;&quot;);
}
/*
//Method 2
arr=[];
if(arr.length==0){
document.write(&quot;Array is Empty&quot;+&quot;&lt;br&gt;&quot;);
}
//Method 3
while(arr.length &gt; 0) {
arr.pop();
}
if(arr.length==0){

document.write(&quot;Array is Empty&quot;+&quot;&lt;br&gt;&quot;);
}
// Method 4
arr.length = 0;
if(arr.length==0){
document.write(&quot;Array is Empty&quot;+&quot;&lt;br&gt;&quot;);
}
*/
}
delete1 ();
search();
arrayEmpty();
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;